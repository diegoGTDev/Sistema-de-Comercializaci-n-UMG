/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.views;

import com.mycompany.services.ClientesService;
import javax.management.modelmbean.ModelMBean;
import com.mycompany.models.Cliente;
import com.mycompany.models.HeaderColor;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class GestionClientesView extends javax.swing.JPanel {

    /**
     * Creates new form Form
     */
    ClientesService _clientesService = ClientesService.getInstance();
    int opc = 0;

    public GestionClientesView() {
        initComponents();
        tableClientes.getTableHeader().setDefaultRenderer(new HeaderColor());
        tableClientes.getTableHeader().setPreferredSize(new Dimension(tableClientes.getTableHeader().getWidth(), 25));
        CargarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void CargarDatos() {
        try {
            DefaultTableModel model = (DefaultTableModel) this.tableClientes.getModel();
            ArrayList<Cliente> clientes = _clientesService.consultarClientes();
            clientes.forEach((p) -> model.addRow(new Object[]{p.getNIT(), p.getNombre(), p.getDireccion(), p.getTelefono(), p.getCorreo()}));
        }catch(Exception e){
            System.out.println(e);
        }

    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCrear = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        btnEliminar1 = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnProcesar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableClientes = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(760, 610));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(760, 610));
        setRequestFocusEnabled(false);

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnEliminar1.setText("Eliminar");

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnProcesar.setText("Procesar");
        btnProcesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcesarActionPerformed(evt);
            }
        });

        tableClientes.setBackground(new java.awt.Color(255, 255, 255));
        tableClientes.setFont(new java.awt.Font("Segoe UI Symbol", 0, 12)); // NOI18N
        tableClientes.setForeground(new java.awt.Color(0, 0, 0));
        tableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIT", "Nombre", "Dirección", "Teléfono", "Correo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableClientes.setRowHeight(25);
        tableClientes.setSelectionBackground(new java.awt.Color(232, 57, 95));
        tableClientes.setShowGrid(false);
        tableClientes.setShowHorizontalLines(true);
        tableClientes.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableClientes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(btnCrear)
                        .addGap(27, 27, 27)
                        .addComponent(btnConsultar)
                        .addGap(46, 46, 46)
                        .addComponent(btnEliminar1)
                        .addGap(37, 37, 37)
                        .addComponent(btnActualizar)
                        .addGap(77, 77, 77)
                        .addComponent(btnProcesar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrear)
                    .addComponent(btnConsultar)
                    .addComponent(btnEliminar1)
                    .addComponent(btnActualizar)
                    .addComponent(btnProcesar))
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents
        private void limpiarFields() {
        /*
        txtNIT.setText("");
        txtNIT.setEditable(true);
        txtNombre.setText("");
        txtDireccion.setText("");
        txtTel.setText("");
        txtCorreo.setText("");
         */
    }

    private void establecerNoEditableTodo() {
        /*
        txtNIT.setEditable(false);
        txtNombre.setEditable(false);
        txtDireccion.setEditable(false);
        txtTel.setEditable(false);
        txtCorreo.setEditable(false);
         */

    }
    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        this.opc = 1;
        /*
        String nombre = txtNombre.getText();
        String nit = txtNIT.getText();
        String direccion = txtDireccion.getText();
        String correo = txtCorreo.getText();
        String telefono = txtTel.getText();
        if (nombre.isEmpty() || nit.isEmpty() || direccion.isEmpty() || correo.isEmpty() || telefono.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No puede dejar los campos en blanco");
            return;

        }
        this.btnProcesar.setEnabled(true);
         */
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        // TODO add your handling code here:
        String nitIngresado = JOptionPane.showInputDialog(null, "Ingrese el nit: ");
        System.out.println("NIt: " + nitIngresado);
        String[] result;
        result = _clientesService.consultarCliente(nitIngresado);
        /*
        if (result == null) {
            JOptionPane.showMessageDialog(null, "No se encontró el cliente");
            return;
        } else {
            this.establecerNoEditableTodo();
            txtCorreo.setText(result[4]);
            txtNombre.setText(result[1]);
            txtTel.setText(result[3]);
            txtDireccion.setText(result[2]);
            txtNIT.setText(result[0]);
        }*/
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        /*
        String nitConsulta = "";
        nitConsulta = JOptionPane.showInputDialog("Ingrese el NIT a actualizar");
        String[] result;
        result = _clientesService.consultarCliente(nitConsulta);
        if (result == null) {
            JOptionPane.showMessageDialog(null, "No se encontró el cliente");
            return;
        } else {
            String nombre = result[1];
            String nit = result[0];
            String direccion = result[2];
            String correo = result[4];
            String telefono = result[3];
            txtCorreo.setText(correo);
            txtNombre.setText(nombre);
            txtTel.setText(telefono);
            txtDireccion.setText(direccion);
            txtNIT.setText(nit);
            txtNIT.setText(nitConsulta);
            btnProcesar.setEnabled(true);
            txtNIT.setEditable(false);
            txtNombre.setEditable(true);
            txtDireccion.setEditable(true);
            txtCorreo.setEditable(true);
            txtTel.setEditable(true);
            btnProcesar.setEnabled(true);
            this.opc = 2;
        }
         */
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcesarActionPerformed
        // TODO add your handling code here:
        /*
        String nombre = txtNombre.getText();
        String nit = txtNIT.getText();
        String direccion = txtDireccion.getText();
        String correo = txtCorreo.getText();
        String telefono = txtTel.getText();
        switch (opc) {
            case 1:
                _clientesService.crearCliente(nit, nombre, direccion, telefono, correo);
                this.limpiarFields();
                break;
            case 2:
                nombre = txtNombre.getText();
                nit = txtNIT.getText();
                direccion = txtDireccion.getText();
                correo = txtCorreo.getText();
                telefono = txtTel.getText();
                _clientesService.actualizarCliente(nit, nombre, direccion, telefono, correo);
                this.limpiarFields();
                break;

        }
         */
        btnProcesar.setEnabled(false);
    }//GEN-LAST:event_btnProcesarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar1;
    private javax.swing.JButton btnProcesar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableClientes;
    // End of variables declaration//GEN-END:variables
}
